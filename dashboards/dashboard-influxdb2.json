{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "datasource",
            "uid": "grafana"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 8,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 20,
        "panels": [],
        "title": "Live Monitoring",
        "type": "row"
      },
      {
        "datasource": {
          "type": "datasource",
          "uid": "-- Mixed --"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisCenteredZero": true,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 30,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": true,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "displayName": "${__field.name}",
            "links": [],
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "watt"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Charge"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "red",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Grid Usage"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "purple",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Home Usage"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "blue",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Powerwall"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "green",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Solar Energy"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "yellow",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Charge"
              },
              "properties": [
                {
                  "id": "custom.drawStyle",
                  "value": "line"
                },
                {
                  "id": "custom.fillOpacity",
                  "value": 0
                },
                {
                  "id": "custom.lineWidth",
                  "value": 0
                },
                {
                  "id": "custom.lineWidth",
                  "value": 2
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                },
                {
                  "id": "min",
                  "value": -101
                },
                {
                  "id": "max",
                  "value": 101
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Temperature"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#FF9830",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "custom.fillOpacity",
                  "value": 0
                },
                {
                  "id": "unit",
                  "value": "none"
                },
                {
                  "id": "decimals",
                  "value": 0
                },
                {
                  "id": "min",
                  "value": -101
                },
                {
                  "id": "max",
                  "value": 101
                },
                {
                  "id": "custom.lineStyle",
                  "value": {
                    "dash": [
                      6,
                      2
                    ],
                    "fill": "dash"
                  }
                },
                {
                  "id": "custom.axisPlacement",
                  "value": "hidden"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Clouds"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "rgb(255, 255, 255)",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "custom.fillOpacity",
                  "value": 0
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                },
                {
                  "id": "min",
                  "value": -101
                },
                {
                  "id": "max",
                  "value": 101
                },
                {
                  "id": "custom.lineStyle",
                  "value": {
                    "dash": [
                      5,
                      6
                    ],
                    "fill": "dash"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Feels Like"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#F2CC0C",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "custom.fillOpacity",
                  "value": 0
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                },
                {
                  "id": "min",
                  "value": -101
                },
                {
                  "id": "max",
                  "value": 101
                },
                {
                  "id": "custom.lineStyle",
                  "value": {
                    "dash": [
                      6,
                      2
                    ],
                    "fill": "dash"
                  }
                },
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Grid Down"
              },
              "properties": [
                {
                  "id": "custom.axisPlacement",
                  "value": "hidden"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "red",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "min",
                  "value": 0
                },
                {
                  "id": "max",
                  "value": 30
                },
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                },
                {
                  "id": "custom.fillOpacity",
                  "value": 24
                },
                {
                  "id": "custom.spanNulls",
                  "value": 120000
                }
              ]
            },
            {
              "matcher": {
                "id": "byFrameRefID",
                "options": "Sun Altitude"
              },
              "properties": [
                {
                  "id": "custom.fillOpacity",
                  "value": 10
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 0
                },
                {
                  "id": "min",
                  "value": -101
                },
                {
                  "id": "max",
                  "value": 101
                },
                {
                  "id": "custom.lineStyle",
                  "value": {
                    "dash": [
                      1,
                      5
                    ],
                    "fill": "dash"
                  }
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "#c0c0c0",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": true,
                    "tooltip": true,
                    "viz": false
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 13,
          "w": 24,
          "x": 0,
          "y": 1
        },
        "id": 2,
        "interval": "",
        "options": {
          "legend": {
            "calcs": [
              "max"
            ],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "multi",
            "sort": "none"
          }
        },
        "pluginVersion": "9.1.2",
        "targets": [
          {
            "datasource": {
              "type": "fetzerch-sunandmoon-datasource",
              "uid": "cNwAjrt4k"
            },
            "hide": false,
            "refId": "Sun Altitude",
            "target": [
              "sun_altitude"
            ]
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"home\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> set(key: \"_field\", value: \"Home Usage\")",
            "refId": "Home Usage"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"solar\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> set(key: \"_field\", value: \"Solar Energy\")",
            "refId": "Solar Energy"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"battery\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> set(key: \"_field\", value: \"Powerwall\")",
            "refId": "Powerwall"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"grid\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> set(key: \"_field\", value: \"Grid Usage\")",
            "refId": "Grid Usage"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"percentage\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> set(key: \"_field\", value: \"Charge\")",
            "refId": "Charge"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"grid_status\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> filter(fn: (r) => r[\"_value\"] == 0)\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> set(key: \"_field\", value: \"Grid Down\")",
            "refId": "Grid Down"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Temperature\")",
            "refId": "Temperature"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"cloudiness\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Clouds\")",
            "refId": "Clouds"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"feels_like\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Feels Like\")",
            "refId": "Feels Like"
          }
        ],
        "title": "Energy Usage",
        "transformations": [],
        "transparent": true,
        "type": "timeseries"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 14
        },
        "id": 41,
        "panels": [],
        "title": "Power Meters",
        "type": "row"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "blue",
                  "value": null
                }
              ]
            },
            "unit": "kwatth"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 0,
          "y": 15
        },
        "id": 4,
        "interval": "",
        "links": [],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "autogen",
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"home\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> integral(column: \"_value\")\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 / 3600.0 }))",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "home"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "integral"
                },
                {
                  "params": [
                    " / 1000 / 3600"
                  ],
                  "type": "math"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Home Usage",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "yellow",
                  "value": null
                }
              ]
            },
            "unit": "kwatth"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 4,
          "y": 15
        },
        "id": 5,
        "interval": "",
        "links": [],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "autogen",
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"solar\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> integral(column: \"_value\")\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 / 3600.0 }))",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "solar"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "integral"
                },
                {
                  "params": [
                    " / 1000 / 3600"
                  ],
                  "type": "math"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Solar Energy",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "0.0 kWh"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "orange",
                  "value": null
                }
              ]
            },
            "unit": "kwatth"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 8,
          "y": 15
        },
        "id": 8,
        "interval": "",
        "links": [],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "autogen",
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"to_powerwall\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> integral(column: \"_value\")\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 / 3600.0 }))",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "to_pw"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "integral"
                },
                {
                  "params": [
                    " / 1000 / 3600"
                  ],
                  "type": "math"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "To Powerwall",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "kwatth"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 12,
          "y": 15
        },
        "id": 6,
        "interval": "",
        "links": [],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "autogen",
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"from_powerwall\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> integral(column: \"_value\")\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 / 3600.0 }))",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "from_pw"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "integral"
                },
                {
                  "params": [
                    " / 1000 / 3600"
                  ],
                  "type": "math"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "From Powerwall",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "purple",
                  "value": null
                }
              ]
            },
            "unit": "kwatth"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 16,
          "y": 15
        },
        "id": 7,
        "interval": "",
        "links": [],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "autogen",
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"to_grid\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> integral(column: \"_value\")\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 / 3600.0 }))",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "to_grid"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "integral"
                },
                {
                  "params": [
                    " / 1000 / 3600"
                  ],
                  "type": "math"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "To Grid",
        "transparent": true,
        "type": "stat"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 1,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                }
              ]
            },
            "unit": "kwatth"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 2,
          "w": 4,
          "x": 20,
          "y": 15
        },
        "id": 9,
        "interval": "",
        "links": [],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "valueSize": 30
          },
          "textMode": "auto"
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "autogen",
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"from_grid\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> integral(column: \"_value\")\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 / 3600.0 }))",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "from_grid"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "integral"
                },
                {
                  "params": [
                    " / 1000 / 3600"
                  ],
                  "type": "math"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "From Grid",
        "transparent": true,
        "type": "stat"
      },
      {
        "aliasColors": {
          "battery": "green",
          "battery impact": "green",
          "combined": "red",
          "solar": "yellow",
          "solar + battery": "red",
          "solar > grid": "purple",
          "solar > home": "yellow",
          "solar only": "yellow",
          "total": "blue"
        },
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "decimals": 2,
        "description": "Estimated Savings",
        "fieldConfig": {
          "defaults": {
            "links": []
          },
          "overrides": []
        },
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 5,
          "w": 9,
          "x": 0,
          "y": 17
        },
        "hiddenSeries": false,
        "hideTimeOverride": true,
        "id": 45,
        "interval": "",
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "hideEmpty": false,
          "hideZero": true,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": true,
          "values": true
        },
        "lines": false,
        "linewidth": 1,
        "links": [],
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "9.3.2",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "powerwall > home",
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"from_powerwall\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> sum()\n  |> map(fn: (r) => ({ r with _value: r._value * ${grid_cost} }))\n  |> keep(columns: [\"_value\", \"_stop\"])\n  |> map(fn: (r) => ({ \n    \"_time\": r._stop,\n    \"_field\": \"powerwall > home\",\n    \"_value\": r._value\n  }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"to_powerwall\" or r[\"_field\"] == \"to_grid\" or r[\"_field\"] == \"solar\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> sum()\n  |> map(fn: (r) => ({ r with _value: r._value * ${grid_cost} }))\n  |> keep(columns: [\"_field\", \"_value\", \"_stop\"])\n  |> pivot(rowKey:[\"_stop\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ \n    \"_time\": r._stop,\n    \"solar > home\": r.solar - (r.to_powerwall + r.to_grid)\n  }))",
            "refId": "B"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"to_grid\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> sum()\n  |> map(fn: (r) => ({ r with _value: r._value * ${grid_cost} }))\n  |> keep(columns: [\"_value\", \"_stop\"])\n  |> map(fn: (r) => ({ \n    \"_time\": r._stop,\n    \"_field\": \"solar > grid\",\n    \"_value\": r._value\n  }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
            "refId": "C"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"to_powerwall\" or r[\"_field\"] == \"to_grid\" or r[\"_field\"] == \"solar\" or r[\"_field\"] == \"from_powerwall\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> sum()\n  |> map(fn: (r) => ({ r with _value: r._value * ${grid_cost} }))\n  |> keep(columns: [\"_field\", \"_value\", \"_stop\"])\n  |> pivot(rowKey:[\"_stop\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({ \n    \"_time\": r._stop,\n    \"total\": r.to_grid + (r.solar - r.to_powerwall - r.to_grid) + r.from_powerwall\n  }))",
            "refId": "D"
          }
        ],
        "thresholds": [],
        "timeRegions": [],
        "title": "Savings",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "transparent": true,
        "type": "graph",
        "xaxis": {
          "mode": "series",
          "show": false,
          "values": [
            "total"
          ]
        },
        "yaxes": [
          {
            "$$hashKey": "object:1096",
            "decimals": 2,
            "format": "currencyUSD",
            "label": "",
            "logBase": 1,
            "min": "0",
            "show": true
          },
          {
            "$$hashKey": "object:1097",
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {
          "Battery": "#73BF69",
          "Battery Usage": "#73BF69",
          "From Grid": "#B877D9",
          "From Powerwall": "#73BF69",
          "From Solar": "#FADE2A",
          "Grid": "#B877D9",
          "Grid Usage": "#B877D9",
          "Powerwall": "#73BF69",
          "Powerwall Usage": "#73BF69",
          "Solar": "#FADE2A",
          "Solar Usage": "#FADE2A",
          "Total Solar": "#FADE2A",
          "Total Usage": "#5794F2"
        },
        "breakPoint": "50%",
        "combine": {
          "label": "Others",
          "threshold": 0
        },
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fontSize": "100%",
        "format": "kwatth",
        "gridPos": {
          "h": 5,
          "w": 8,
          "x": 9,
          "y": 17
        },
        "id": 43,
        "interval": "",
        "legend": {
          "header": "Power",
          "percentage": true,
          "percentageDecimals": 1,
          "show": true,
          "sortDesc": true,
          "values": true
        },
        "legendType": "Right side",
        "links": [],
        "maxDataPoints": 3,
        "nullPointMode": "connected",
        "pieType": "donut",
        "pluginVersion": "6.5.1",
        "strokeWidth": "1",
        "targets": [
          {
            "alias": "From Powerwall",
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [],
            "hide": false,
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "autogen",
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"from_powerwall\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> integral(column: \"_value\")\n  |> keep(columns: [\"_value\", \"_stop\"])\n  |> map(fn: (r) => ({ \n    \"_time\": r._stop,\n    \"_field\": \"From Powerwall\",\n    \"_value\": r._value / 1000.0 / 3600.0\n  }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
            "rawQuery": false,
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "from_pw"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "integral"
                },
                {
                  "params": [
                    " / 1000 / 3600"
                  ],
                  "type": "math"
                }
              ]
            ],
            "tags": [],
            "tz": "America/Los_Angeles"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"from_grid\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> integral(column: \"_value\")\n  |> keep(columns: [\"_value\", \"_stop\"])\n  |> map(fn: (r) => ({ \n    \"_time\": r._stop,\n    \"_field\": \"From Grid\",\n    \"_value\": r._value / 1000.0 / 3600.0\n  }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
            "refId": "B"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"solar\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> integral(column: \"_value\")\n  |> keep(columns: [\"_value\", \"_stop\"])\n  |> map(fn: (r) => ({ \n    \"_time\": r._stop,\n    \"_field\": \"From Solar\",\n    \"_value\": r._value / 1000.0 / 3600.0\n  }))\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
            "refId": "C"
          }
        ],
        "title": "Self-Powered",
        "transparent": true,
        "type": "grafana-piechart-panel",
        "valueName": "total"
      },
      {
        "activePatternIndex": -2,
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "defaultPattern": {
          "bgColors": "green|gray|red",
          "bgColors_overrides": "0->green|2->red|1->yellow",
          "clickable_cells_link": "",
          "col_name": "Value",
          "decimals": "2",
          "defaultBGColor": "#5794F2",
          "defaultTextColor": "black",
          "delimiter": ".",
          "displayTemplate": "_value_",
          "enable_bgColor": false,
          "enable_bgColor_overrides": false,
          "enable_clickable_cells": false,
          "enable_textColor": false,
          "enable_textColor_overrides": false,
          "enable_time_based_thresholds": false,
          "enable_transform": true,
          "enable_transform_overrides": false,
          "filter": {
            "value_above": "",
            "value_below": ""
          },
          "format": "kwatt",
          "name": "Default Pattern",
          "null_color": "darkred",
          "null_textcolor": "black",
          "null_value": "No data",
          "pattern": "*",
          "row_col_wrapper": "_",
          "row_name": "_1_",
          "textColors": "red|orange|green",
          "textColors_overrides": "0->red|2->green|1->yellow",
          "thresholds": "0",
          "time_based_thresholds": [],
          "tooltipTemplate": "Series : _series_ <br/>Row Name : _row_name_ <br/>Col Name : _col_name_ <br/>Value : _value_",
          "transform_values": "No Usage | Using <div style=\"float: right;\">_value_</div>",
          "transform_values_overrides": "0->down|1->up",
          "valueName": "current"
        },
        "default_title_for_rows": "Metric",
        "font_size": ".9rem",
        "gridPos": {
          "h": 6,
          "w": 6,
          "x": 18,
          "y": 17
        },
        "hide_first_column": false,
        "hide_headers": true,
        "id": 49,
        "interval": "",
        "patterns": [
          {
            "bgColors": "#B877D9 | gray | #F2495C",
            "bgColors_overrides": "0->green|2->red|1->yellow",
            "clickable_cells_link": "",
            "col_name": "Value",
            "decimals": "2",
            "defaultBGColor": "",
            "defaultTextColor": "",
            "delimiter": ".",
            "displayTemplate": "_value_",
            "enable_bgColor": true,
            "enable_bgColor_overrides": false,
            "enable_clickable_cells": false,
            "enable_textColor": true,
            "enable_textColor_overrides": false,
            "enable_time_based_thresholds": false,
            "enable_transform": true,
            "enable_transform_overrides": false,
            "filter": {
              "value_above": "",
              "value_below": ""
            },
            "format": "kwatt",
            "name": "Grid",
            "null_color": "darkred",
            "null_textcolor": "black",
            "null_value": "No data",
            "pattern": "Grid",
            "row_col_wrapper": "_",
            "row_name": "_1_",
            "textColors": "white | white | white",
            "textColors_overrides": "0->red|2->green|1->yellow",
            "thresholds": "-0.09,0.09",
            "time_based_thresholds": [],
            "tooltipTemplate": "Series : _series_ <br/>Row Name : _row_name_ <br/>Col Name : _col_name_ <br/>Value : _value_",
            "transform_values": "Exporting <div style=\"float: right;\">_value_</div> | Idle | Importing <div style=\"float: right;\">_value_</div>",
            "transform_values_overrides": "0->down|1->up",
            "valueName": "avg"
          },
          {
            "bgColors": "#73BF69 | gray | #F2495C",
            "bgColors_overrides": "0->green|2->red|1->yellow",
            "clickable_cells_link": "",
            "col_name": "Value",
            "decimals": "2",
            "defaultBGColor": "",
            "defaultTextColor": "",
            "delimiter": ".",
            "displayTemplate": "_value_",
            "enable_bgColor": true,
            "enable_bgColor_overrides": false,
            "enable_clickable_cells": false,
            "enable_textColor": true,
            "enable_textColor_overrides": false,
            "enable_time_based_thresholds": false,
            "enable_transform": true,
            "enable_transform_overrides": false,
            "filter": {
              "value_above": "",
              "value_below": ""
            },
            "format": "kwatt",
            "name": "Battery",
            "null_color": "darkred",
            "null_textcolor": "black",
            "null_value": "No data",
            "pattern": "Battery",
            "row_col_wrapper": "_",
            "row_name": "_1_",
            "textColors": "white | white | white",
            "textColors_overrides": "0->red|2->green|1->yellow",
            "thresholds": "-0.1,0.1",
            "time_based_thresholds": [],
            "tooltipTemplate": "Series : _series_ <br/>Row Name : _row_name_ <br/>Col Name : _col_name_ <br/>Value : _value_",
            "transform_values": "Charging <div style=\"float: right;\">_value_</div> | Idle | Discharging <div style=\"float: right;\">_value_</div>",
            "transform_values_overrides": "0->down|1->up",
            "valueName": "avg"
          },
          {
            "bgColors": "red|yellow",
            "bgColors_overrides": "0->green|2->red|1->yellow",
            "clickable_cells_link": "",
            "col_name": "Value",
            "decimals": "2",
            "defaultBGColor": "#FADE2A",
            "defaultTextColor": "black",
            "delimiter": ".",
            "displayTemplate": "_value_",
            "enable_bgColor": false,
            "enable_bgColor_overrides": false,
            "enable_clickable_cells": false,
            "enable_textColor": false,
            "enable_textColor_overrides": false,
            "enable_time_based_thresholds": false,
            "enable_transform": true,
            "enable_transform_overrides": false,
            "filter": {
              "value_above": "",
              "value_below": ""
            },
            "format": "kwatt",
            "name": "Solar",
            "null_color": "darkred",
            "null_textcolor": "black",
            "null_value": "No data",
            "pattern": "Solar",
            "row_col_wrapper": "_",
            "row_name": "_1_",
            "textColors": "white|black",
            "textColors_overrides": "0->red|2->green|1->yellow",
            "thresholds": "0.1",
            "time_based_thresholds": [],
            "tooltipTemplate": "Series : _series_ <br/>Row Name : _row_name_ <br/>Col Name : _col_name_ <br/>Value : _value_",
            "transform_values": "No Generation | Generating <div style=\"float: right;\">_value_</div>",
            "transform_values_overrides": "0->down|1->up",
            "valueName": "avg"
          }
        ],
        "row_col_wrapper": "_",
        "sorting_props": {
          "col_index": -1,
          "direction": "desc"
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "query": "import \"strings\"\nfrom(bucket: \"powerwall\")\n  |> range(start: -10m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"solar\" or r[\"_field\"] == \"home\" or r[\"_field\"] == \"battery\" or r[\"_field\"] == \"grid\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> last()\n  |> map(fn: (r) => ({ \n    \"_time\": r._time,\n    \"_field\": strings.title(v: r._field),\n    \"_value\": r._value / 1000.0\n  }))\n  ",
            "rawQuery": true,
            "refId": "A",
            "resultFormat": "time_series"
          }
        ],
        "title": "Current State",
        "transparent": true,
        "type": "yesoreyeram-boomtable-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 23
        },
        "id": 22,
        "panels": [],
        "title": "Monthly Analysis",
        "type": "row"
      },
      {
        "aliasColors": {
          "Home Usage": "blue"
        },
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "displayName": "${__field.name}",
            "links": [],
            "unit": "kwatth"
          },
          "overrides": []
        },
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 24
        },
        "hiddenSeries": false,
        "id": 24,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": false,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "9.3.2",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "Home Usage",
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [
              {
                "params": [
                  "1d"
                ],
                "type": "time"
              },
              {
                "params": [
                  "0"
                ],
                "type": "fill"
              }
            ],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "kwh",
            "query": "import \"timezone\"\nimport \"date\"\n\noption location = timezone.location(name: \"America/New_York\")\n\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"home\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({r with _time: date.truncate(t: r._time, unit: 1d )}))\n  |> group(columns: [\"_time\", \"_field\", \"_host\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"_field\"])\n  |> set(key: \"_field\", value: \"Home Usage\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "home"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "sum"
                }
              ]
            ],
            "tags": [],
            "tz": "America/Los_Angeles"
          }
        ],
        "thresholds": [],
        "timeFrom": "1M",
        "timeRegions": [],
        "title": "Home Usage",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "transparent": true,
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "$$hashKey": "object:1250",
            "format": "kwatth",
            "logBase": 1,
            "show": true
          },
          {
            "$$hashKey": "object:1251",
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {
          "Solar Energy": "yellow"
        },
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "displayName": "${__field.name}",
            "links": [],
            "unit": "kwatth"
          },
          "overrides": []
        },
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 24
        },
        "hiddenSeries": false,
        "id": 25,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": false,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "9.3.2",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "Solar Energy",
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [
              {
                "params": [
                  "1d"
                ],
                "type": "time"
              },
              {
                "params": [
                  "0"
                ],
                "type": "fill"
              }
            ],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "kwh",
            "query": "import \"timezone\"\nimport \"date\"\n\noption location = timezone.location(name: \"America/New_York\")\n\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"solar\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({r with _time: date.truncate(t: r._time, unit: 1d )}))\n  |> group(columns: [\"_time\", \"_field\", \"_host\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"_field\"])\n  |> set(key: \"_field\", value: \"Solar Energy\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "solar"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "sum"
                }
              ]
            ],
            "tags": [
              {
                "key": "solar",
                "operator": ">",
                "value": "0"
              }
            ],
            "tz": "America/Los_Angeles"
          }
        ],
        "thresholds": [],
        "timeFrom": "1M",
        "timeRegions": [],
        "title": "Solar Energy",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "transparent": true,
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "$$hashKey": "object:1324",
            "format": "kwatth",
            "logBase": 1,
            "show": true
          },
          {
            "$$hashKey": "object:1325",
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {
          "From Powerwall": "green",
          "To Powerwall": "orange"
        },
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "displayName": "${__field.name}",
            "links": [],
            "unit": "kwatth"
          },
          "overrides": []
        },
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 32
        },
        "hiddenSeries": false,
        "id": 26,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": false,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "9.3.2",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "$$hashKey": "object:1183",
            "alias": "To Powerwall",
            "bars": false,
            "fill": 0,
            "lines": true,
            "steppedLine": true
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "From Powerwall",
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [
              {
                "params": [
                  "1d"
                ],
                "type": "time"
              },
              {
                "params": [
                  "0"
                ],
                "type": "fill"
              }
            ],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "kwh",
            "query": "import \"timezone\"\nimport \"date\"\n\noption location = timezone.location(name: \"America/New_York\")\n\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"from_powerwall\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({r with _time: date.truncate(t: r._time, unit: 1d )}))\n  |> group(columns: [\"_time\", \"_field\", \"_host\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"_field\"])\n  |> set(key: \"_field\", value: \"From Powerwall\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "from_pw"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "sum"
                }
              ]
            ],
            "tags": [],
            "tz": "America/Los_Angeles"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "import \"timezone\"\nimport \"date\"\n\noption location = timezone.location(name: \"America/New_York\")\n\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"to_powerwall\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({r with _time: date.truncate(t: r._time, unit: 1d )}))\n  |> group(columns: [\"_time\", \"_field\", \"_host\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"_field\"])\n  |> set(key: \"_field\", value: \"To Powerwall\")",
            "refId": "B"
          }
        ],
        "thresholds": [],
        "timeFrom": "1M",
        "timeRegions": [],
        "title": "Powerwall",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "transparent": true,
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "$$hashKey": "object:1398",
            "format": "kwatth",
            "logBase": 1,
            "show": true
          },
          {
            "$$hashKey": "object:1399",
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {
          "From Grid": "red",
          "To Grid": "purple"
        },
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "displayName": "${__field.name}",
            "links": [],
            "unit": "kwatth"
          },
          "overrides": []
        },
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 32
        },
        "hiddenSeries": false,
        "id": 27,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": false,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "9.3.2",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "$$hashKey": "object:1467",
            "alias": "To Grid",
            "bars": false,
            "fill": 0,
            "lines": true,
            "steppedLine": true
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "From Grid",
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [
              {
                "params": [
                  "1d"
                ],
                "type": "time"
              },
              {
                "params": [
                  "0"
                ],
                "type": "fill"
              }
            ],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "kwh",
            "query": "import \"timezone\"\nimport \"date\"\n\noption location = timezone.location(name: \"America/New_York\")\n\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"from_grid\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({r with _time: date.truncate(t: r._time, unit: 1d )}))\n  |> group(columns: [\"_time\", \"_field\", \"_host\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"_field\"])\n  |> set(key: \"_field\", value: \"From Grid\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "from_grid"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "sum"
                }
              ]
            ],
            "tags": [],
            "tz": "America/Los_Angeles"
          },
          {
            "alias": "To Grid",
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [
              {
                "params": [
                  "1d"
                ],
                "type": "time"
              },
              {
                "params": [
                  "0"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "kwh",
            "query": "import \"timezone\"\nimport \"date\"\n\noption location = timezone.location(name: \"America/New_York\")\n\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"to_grid\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({r with _time: date.truncate(t: r._time, unit: 1d )}))\n  |> group(columns: [\"_time\", \"_field\", \"_host\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"_field\"])\n  |> set(key: \"_field\", value: \"To Grid\")",
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "to_grid"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "sum"
                },
                {
                  "params": [
                    "* -1"
                  ],
                  "type": "math"
                }
              ]
            ],
            "tags": [],
            "tz": "America/Los_Angeles"
          }
        ],
        "thresholds": [],
        "timeFrom": "1M",
        "timeRegions": [],
        "title": "Grid Usage",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "transparent": true,
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "$$hashKey": "object:1477",
            "format": "kwatth",
            "logBase": 1,
            "show": true
          },
          {
            "$$hashKey": "object:1478",
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {
          "Home Usage": "blue",
          "Solar Energy": "yellow",
          "To Grid": "purple"
        },
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "influxdb",
          "uid": "4g8-SShVz"
        },
        "fieldConfig": {
          "defaults": {
            "displayName": "${__field.name}",
            "links": [],
            "unit": "kwatth"
          },
          "overrides": []
        },
        "fill": 1,
        "fillGradient": 0,
        "gridPos": {
          "h": 5,
          "w": 24,
          "x": 0,
          "y": 40
        },
        "hiddenSeries": false,
        "id": 30,
        "interval": "",
        "legend": {
          "alignAsTable": false,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": false,
          "total": false,
          "values": false
        },
        "lines": false,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "9.3.2",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "$$hashKey": "object:1551",
            "alias": "Solar Energy Year",
            "color": "#FADE2A"
          },
          {
            "$$hashKey": "object:1552",
            "alias": "Home Usage",
            "bars": false,
            "fill": 0,
            "lines": true,
            "steppedLine": true
          },
          {
            "$$hashKey": "object:131",
            "alias": "To Grid",
            "bars": false,
            "fill": 0,
            "lines": true,
            "steppedLine": true
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "Solar Energy",
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [
              {
                "params": [
                  "1d"
                ],
                "type": "time"
              },
              {
                "params": [
                  "0"
                ],
                "type": "fill"
              }
            ],
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "kwh",
            "query": "import \"timezone\"\nimport \"date\"\n\noption location = timezone.location(name: \"America/New_York\")\n\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"home\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({r with _time: date.truncate(t: r._time, unit: 1d )}))\n  |> group(columns: [\"_time\", \"_field\", \"_host\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"_field\"])\n  |> set(key: \"_field\", value: \"Home Usage\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "solar"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "sum"
                }
              ]
            ],
            "tags": [
              {
                "key": "solar",
                "operator": ">",
                "value": "0"
              }
            ],
            "tz": "America/Los_Angeles"
          },
          {
            "alias": "Home Usage",
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "groupBy": [
              {
                "params": [
                  "1d"
                ],
                "type": "time"
              },
              {
                "params": [
                  "0"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "measurement": "http",
            "orderByTime": "ASC",
            "policy": "kwh",
            "query": "import \"timezone\"\nimport \"date\"\n\noption location = timezone.location(name: \"America/New_York\")\n\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"solar\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({r with _time: date.truncate(t: r._time, unit: 1d )}))\n  |> group(columns: [\"_time\", \"_field\", \"_host\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"_field\"])\n  |> set(key: \"_field\", value: \"Solar Energy\")",
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "home"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "sum"
                }
              ]
            ],
            "tags": [
              {
                "key": "home",
                "operator": ">",
                "value": "0"
              }
            ],
            "tz": "America/Los_Angeles"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "hide": false,
            "query": "import \"timezone\"\nimport \"date\"\n\noption location = timezone.location(name: \"America/New_York\")\n\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"kwh\")\n  |> filter(fn: (r) => r[\"_field\"] == \"to_grid\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({r with _time: date.truncate(t: r._time, unit: 1d )}))\n  |> group(columns: [\"_time\", \"_field\", \"_host\"])\n  |> sum(column: \"_value\")\n  |> group(columns: [\"_field\"])\n  |> set(key: \"_field\", value: \"To Grid\")",
            "refId": "C"
          }
        ],
        "thresholds": [],
        "timeFrom": "12M",
        "timeRegions": [],
        "title": "Solar Energy Year",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "transparent": true,
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "$$hashKey": "object:1573",
            "format": "kwatth",
            "logBase": 1,
            "show": true
          },
          {
            "$$hashKey": "object:1574",
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 45
        },
        "id": 37,
        "panels": [
          {
            "aliasColors": {
              "Solar Energy": "yellow"
            },
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "fieldConfig": {
              "defaults": {
                "displayName": "${__field.name}",
                "links": []
              },
              "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
              "h": 5,
              "w": 8,
              "x": 0,
              "y": 46
            },
            "hiddenSeries": false,
            "id": 32,
            "interval": "",
            "legend": {
              "avg": false,
              "current": false,
              "hideEmpty": false,
              "hideZero": false,
              "max": true,
              "min": false,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "hide": false,
                "query": "import \"regexp\"\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"plus\")\n  |> filter(fn: (r) => r[\"_field\"] == \"string_volt_D\" or r[\"_field\"] == \"string_volt_C\" or r[\"_field\"] == \"string_volt_B\" or r[\"_field\"] == \"string_volt_A\" or r[\"_field\"] == \"string_volt_D1\" or r[\"_field\"] == \"string_volt_C1\" or r[\"_field\"] == \"string_volt_B1\" or r[\"_field\"] == \"string_volt_A1\" or r[\"_field\"] == \"string_volt_D2\" or r[\"_field\"] == \"string_volt_C2\" or r[\"_field\"] == \"string_volt_B2\" or r[\"_field\"] == \"string_volt_A2\" or r[\"_field\"] == \"string_volt_D3\" or r[\"_field\"] == \"string_volt_C3\" or r[\"_field\"] == \"string_volt_B3\" or r[\"_field\"] == \"string_volt_A3\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({ r with _field: regexp.replaceAllString(v: r._field, r: /string_volt_([A-D][1-3]?)/, t: \"$1\") }))",
                "refId": "A"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "String Voltage",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:1649",
                "format": "volt",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "$$hashKey": "object:1650",
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {
              "Solar Energy": "yellow"
            },
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "fieldConfig": {
              "defaults": {
                "displayName": "${__field.name}",
                "links": [],
                "unit": "amp"
              },
              "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
              "h": 5,
              "w": 8,
              "x": 8,
              "y": 46
            },
            "hiddenSeries": false,
            "id": 62,
            "interval": "",
            "legend": {
              "avg": false,
              "current": false,
              "hideEmpty": false,
              "hideZero": false,
              "max": true,
              "min": false,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "hide": false,
                "query": "import \"regexp\"\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"plus\")\n  |> filter(fn: (r) => r[\"_field\"] == \"string_current_D\" or r[\"_field\"] == \"string_current_C\" or r[\"_field\"] == \"string_current_B\" or r[\"_field\"] == \"string_current_A\" or r[\"_field\"] == \"string_current_D1\" or r[\"_field\"] == \"string_current_C1\" or r[\"_field\"] == \"string_current_B1\" or r[\"_field\"] == \"string_current_A1\" or r[\"_field\"] == \"string_current_D2\" or r[\"_field\"] == \"string_current_C2\" or r[\"_field\"] == \"string_current_B2\" or r[\"_field\"] == \"string_current_A2\" or r[\"_field\"] == \"string_current_D3\" or r[\"_field\"] == \"string_current_C3\" or r[\"_field\"] == \"string_current_B3\" or r[\"_field\"] == \"string_current_A3\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({ r with _field: regexp.replaceAllString(v: r._field, r: /string_current_([A-D][1-3]?)/, t: \"$1\") }))",
                "refId": "A"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "String Current",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:1649",
                "format": "amp",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "$$hashKey": "object:1650",
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {
              "Solar Energy": "yellow"
            },
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "fieldConfig": {
              "defaults": {
                "displayName": "${__field.name}",
                "links": [],
                "unit": "watt"
              },
              "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
              "h": 5,
              "w": 8,
              "x": 16,
              "y": 46
            },
            "hiddenSeries": false,
            "id": 63,
            "interval": "",
            "legend": {
              "avg": false,
              "current": false,
              "hideEmpty": false,
              "hideZero": false,
              "max": true,
              "min": false,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "hide": false,
                "query": "import \"regexp\"\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"plus\")\n  |> filter(fn: (r) => r[\"_field\"] == \"string_power_D\" or r[\"_field\"] == \"string_power_C\" or r[\"_field\"] == \"string_power_B\" or r[\"_field\"] == \"string_power_A\" or r[\"_field\"] == \"string_power_D1\" or r[\"_field\"] == \"string_power_C1\" or r[\"_field\"] == \"string_power_B1\" or r[\"_field\"] == \"string_power_A1\" or r[\"_field\"] == \"string_power_D2\" or r[\"_field\"] == \"string_power_C2\" or r[\"_field\"] == \"string_power_B2\" or r[\"_field\"] == \"string_power_A2\" or r[\"_field\"] == \"string_power_D3\" or r[\"_field\"] == \"string_power_C3\" or r[\"_field\"] == \"string_power_B3\" or r[\"_field\"] == \"string_power_A3\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({ r with _field: regexp.replaceAllString(v: r._field, r: /string_power_([A-D][1-3]?)/, t: \"$1\") }))",
                "refId": "A"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "String Power",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:1649",
                "format": "watt",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "$$hashKey": "object:1650",
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {
              "Solar Energy": "yellow"
            },
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "fieldConfig": {
              "defaults": {
                "displayName": "${__field.name}",
                "links": []
              },
              "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
              "h": 6,
              "w": 12,
              "x": 0,
              "y": 51
            },
            "hiddenSeries": false,
            "id": 34,
            "interval": "",
            "legend": {
              "avg": false,
              "current": false,
              "max": true,
              "min": false,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "alias": "Inverter1",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "measurement": "http",
                "orderByTime": "ASC",
                "policy": "strings",
                "query": "import \"strings\"\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"plus\")\n  |> filter(fn: (r) => r[\"_field\"] == \"inverter\" or r[\"_field\"] == \"inverter1\" or r[\"_field\"] == \"inverter2\" or r[\"_field\"] == \"inverter3\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({ r with _field: strings.title(v: r._field) }))\n\n",
                "refId": "A",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "Inverter1"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Inverter Power",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:1801",
                "format": "watt",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "$$hashKey": "object:1802",
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {
              "Solar Energy": "yellow"
            },
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "decimals": 1,
            "fieldConfig": {
              "defaults": {
                "displayName": "${__field.name}",
                "links": []
              },
              "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
              "h": 6,
              "w": 12,
              "x": 12,
              "y": 51
            },
            "hiddenSeries": false,
            "id": 35,
            "interval": "",
            "legend": {
              "avg": false,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "alias": "Powerwall1",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "measurement": "http",
                "orderByTime": "ASC",
                "policy": "pwtemps",
                "query": "import \"strings\"\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"plus\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_PW1\"  or r[\"_field\"] == \"temp_PW2\"  or r[\"_field\"] == \"temp_PW3\"  or r[\"_field\"] == \"temp_PW4\"  or r[\"_field\"] == \"temp_PW5\"  or r[\"_field\"] == \"temp_PW6\" or r[\"_field\"] == \"temp_PW7\" or r[\"_field\"] == \"temp_PW8\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> map(fn: (r) => ({ r with _field: strings.replace(v: r._field, t: \"temp_\", u: \"\", i: 1) }))  ",
                "refId": "A",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "PW1_temp"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Powerwall Temps ",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:1877",
                "format": "celsius",
                "logBase": 1,
                "show": true
              },
              {
                "$$hashKey": "object:1878",
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {
              "Solar Energy": "yellow"
            },
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "decimals": 1,
            "description": "",
            "fieldConfig": {
              "defaults": {
                "displayName": "${__field.name}",
                "links": []
              },
              "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
              "h": 5,
              "w": 24,
              "x": 0,
              "y": 57
            },
            "hiddenSeries": false,
            "id": 38,
            "interval": "",
            "legend": {
              "avg": false,
              "current": false,
              "hideEmpty": false,
              "hideZero": false,
              "max": true,
              "min": true,
              "rightSide": true,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "alias": "Home L1",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "measurement": "http",
                "orderByTime": "ASC",
                "policy": "vitals",
                "query": "import \"strings\"\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"plus\")\n  |> filter(fn: (r) => r[\"_field\"] == \"freq_home_L1\" or r[\"_field\"] == \"freq_home_L2\" or r[\"_field\"] == \"freq_home_L3\" or r[\"_field\"] == \"freq_grid_L1\" or r[\"_field\"] == \"freq_grid_L2\" or r[\"_field\"] == \"freq_grid_L3\" or r[\"_field\"] == \"freq_PW1\" or r[\"_field\"] == \"freq_PW2\" or r[\"_field\"] == \"freq_PW3\" or r[\"_field\"] == \"freq_PW4\" or r[\"_field\"] == \"freq_PW5\" or r[\"_field\"] == \"freq_PW6\" or r[\"_field\"] == \"freq_PW7\" or r[\"_field\"] == \"freq_PW8\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({ r with _field: strings.title(v: strings.replace(v: strings.replace(v: r._field, t: \"freq_\", u: \"\", i: 1), t: \"_\", u: \" \", i: 1)) }))",
                "refId": "A",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "ISLAND_FreqL1_Load"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Frequency",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:1953",
                "format": "hertz",
                "logBase": 1,
                "show": true
              },
              {
                "$$hashKey": "object:1954",
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {
              "Solar Energy": "yellow"
            },
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "decimals": 1,
            "description": "",
            "fieldConfig": {
              "defaults": {
                "displayName": "${__field.name}",
                "links": [],
                "unit": "volt"
              },
              "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
              "h": 5,
              "w": 24,
              "x": 0,
              "y": 62
            },
            "hiddenSeries": false,
            "id": 61,
            "interval": "",
            "legend": {
              "avg": false,
              "current": false,
              "hideEmpty": false,
              "hideZero": false,
              "max": true,
              "min": true,
              "rightSide": true,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "alias": "Home L1",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "measurement": "http",
                "orderByTime": "ASC",
                "policy": "vitals",
                "query": "import \"strings\"\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"plus\")\n  |> filter(fn: (r) => r[\"_field\"] == \"volt_PW1_L1\"  or r[\"_field\"] == \"volt_PW2_L1\"  or r[\"_field\"] == \"volt_PW3_L1\"  or r[\"_field\"] == \"volt_PW4_L1\"  or r[\"_field\"] == \"volt_PW5_L1\"  or r[\"_field\"] == \"volt_PW6_L1\" or r[\"_field\"] == \"volt_PW7_L1\" or r[\"_field\"] == \"volt_PW8_L1\" or r[\"_field\"] == \"volt_PW1_L2\"  or r[\"_field\"] == \"volt_PW2_L2\" or r[\"_field\"] == \"volt_PW3_L2\"  or r[\"_field\"] == \"volt_PW4_L2\"  or r[\"_field\"] == \"volt_PW5_L2\"  or r[\"_field\"] == \"volt_PW6_L2\" or r[\"_field\"] == \"volt_PW7_L2\" or r[\"_field\"] == \"volt_PW8_L2\" or r[\"_field\"] == \"volt_PW1_L3\"  or r[\"_field\"] == \"volt_PW2_L3\"  or r[\"_field\"] == \"volt_PW3_L3\"  or r[\"_field\"] == \"volt_PW4_L3\"  or r[\"_field\"] == \"volt_PW5_L3\"  or r[\"_field\"] == \"volt_PW6_L3\" or r[\"_field\"] == \"volt_PW7_L3\" or r[\"_field\"] == \"volt_PW8_L3\" or r[\"_field\"] == \"volt_home_L1\"  or r[\"_field\"] == \"volt_home_L2\"  or r[\"_field\"] == \"volt_home_L3\"  or r[\"_field\"] == \"volt_grid_L1\"  or r[\"_field\"] == \"volt_grid_L2\"  or r[\"_field\"] == \"volt_grid_L3\" )\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({ r with _field: strings.title(v: strings.replace(v: strings.replace(v: r._field, t: \"volt_\", u: \"\", i: 1), t: \"_\", u: \" \", i: 1)) }))",
                "refId": "A",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "ISLAND_VL1N_Load"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Voltages",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:1953",
                "format": "volt",
                "logBase": 1,
                "show": true
              },
              {
                "$$hashKey": "object:1954",
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "decimals": 2,
            "description": "",
            "fieldConfig": {
              "defaults": {
                "displayName": "${__field.name}",
                "links": []
              },
              "overrides": []
            },
            "fill": 0,
            "fillGradient": 0,
            "gridPos": {
              "h": 5,
              "w": 24,
              "x": 0,
              "y": 67
            },
            "hiddenSeries": false,
            "id": 55,
            "legend": {
              "alignAsTable": true,
              "avg": false,
              "current": false,
              "max": true,
              "min": true,
              "rightSide": true,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
              {
                "$$hashKey": "object:2414",
                "alias": "/Charge$/",
                "dashes": true,
                "fill": 1
              },
              {
                "$$hashKey": "object:2415",
                "alias": "/^PW1/",
                "color": "#37872D"
              },
              {
                "$$hashKey": "object:2416",
                "alias": "/^PW2/",
                "color": "#E0B400"
              },
              {
                "$$hashKey": "object:2417",
                "alias": "/^PW3/",
                "color": "#C4162A"
              },
              {
                "$$hashKey": "object:2418",
                "alias": "/^PW4/",
                "color": "#1F60C4"
              },
              {
                "$$hashKey": "object:2419",
                "alias": "/^PW5/",
                "color": "#FF9830"
              },
              {
                "$$hashKey": "object:2420",
                "alias": "/^PW6/",
                "color": "#8F3BB8"
              }
            ],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "alias": "PW1",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "measurement": "http",
                "orderByTime": "ASC",
                "policy": "pod",
                "query": "import \"strings\"\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"plus\")\n  |> filter(fn: (r) => r[\"_field\"] == \"charge_capacity_PW1\"  or r[\"_field\"] == \"charge_capacity_PW2\"  or r[\"_field\"] == \"charge_capacity_PW3\"  or r[\"_field\"] == \"charge_capacity_PW4\"  or r[\"_field\"] == \"charge_capacity_PW5\"  or r[\"_field\"] == \"charge_capacity_PW6\" or r[\"_field\"] == \"charge_capacity_PW7\" or r[\"_field\"] == \"charge_capacity_PW8\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({ r with _field: strings.replace(v: r._field, t: \"charge_capacity_\", u: \"\", i: 1) }))",
                "refId": "A",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "PW1_POD_nom_full_pack_energy"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              },
              {
                "alias": "PW2",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "hide": false,
                "measurement": "http",
                "orderByTime": "ASC",
                "policy": "pod",
                "query": "import \"strings\"\nfrom(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"plus\")\n  |> filter(fn: (r) => r[\"_field\"] == \"charge_remaining_PW1\"  or r[\"_field\"] == \"charge_remaining_PW2\"  or r[\"_field\"] == \"charge_remaining_PW3\"  or r[\"_field\"] == \"charge_remaining_PW4\"  or r[\"_field\"] == \"charge_remaining_PW5\"  or r[\"_field\"] == \"charge_remaining_PW6\" or r[\"_field\"] == \"charge_remaining_PW7\" or r[\"_field\"] == \"charge_remaining_PW8\")\n  |> filter(fn: (r) => r[\"host\"] == \"${powerwall}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({ r with _field: strings.replace(v: r._field, t: \"charge_remaining_\", u: \"\", i: 1) + \" Charge\" }))",
                "refId": "B",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "PW2_POD_nom_full_pack_energy"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Powerwall Capacity",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:2465",
                "format": "watth",
                "logBase": 1,
                "show": true
              },
              {
                "$$hashKey": "object:2466",
                "format": "short",
                "logBase": 1,
                "show": true
              }
            ],
            "yaxis": {
              "align": false
            }
          }
        ],
        "title": "Powerwall+",
        "type": "row"
      },
      {
        "collapsed": true,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 46
        },
        "id": 57,
        "panels": [
          {
            "aliasColors": {
              "Feels Like": "yellow",
              "Temperature": "red"
            },
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "description": "",
            "fieldConfig": {
              "defaults": {
                "links": []
              },
              "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
              "h": 6,
              "w": 24,
              "x": 0,
              "y": 47
            },
            "hiddenSeries": false,
            "hideTimeOverride": false,
            "id": 59,
            "interval": "",
            "legend": {
              "avg": false,
              "current": true,
              "hideEmpty": false,
              "hideZero": false,
              "max": false,
              "min": false,
              "rightSide": false,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
              {
                "$$hashKey": "object:2548",
                "alias": "Clouds (%)",
                "color": "rgb(255, 255, 255)",
                "dashes": true,
                "yaxis": 2
              },
              {
                "$$hashKey": "object:2549",
                "alias": "Temperature",
                "color": "#F2495C"
              },
              {
                "$$hashKey": "object:2550",
                "alias": "Humidity (%)",
                "color": "#8AB8FF",
                "dashLength": 9,
                "dashes": true,
                "yaxis": 2
              },
              {
                "$$hashKey": "object:2551",
                "alias": "Feels Like",
                "dashLength": 5,
                "dashes": true,
                "fill": 0,
                "spaceLength": 3
              }
            ],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "alias": "Temperature",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "measurement": "weather",
                "orderByTime": "ASC",
                "policy": "autogen",
                "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Temperature\")",
                "refId": "A",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "temperature"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              },
              {
                "alias": "Humidity (%)",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "hide": false,
                "measurement": "weather",
                "orderByTime": "ASC",
                "policy": "autogen",
                "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"humidity\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Humidity (%)\")",
                "refId": "B",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "humidity"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              },
              {
                "alias": "Clouds (%)",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "hide": false,
                "measurement": "weather",
                "orderByTime": "ASC",
                "policy": "autogen",
                "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"cloudiness\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Clouds (%)\")",
                "refId": "C",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "clouds"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              },
              {
                "alias": "Feels Like",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "hide": false,
                "measurement": "weather",
                "orderByTime": "ASC",
                "policy": "autogen",
                "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"feels_like\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Feels Like\")",
                "refId": "D",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "feels_like"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Temperature, Humidity and Clouds",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:2592",
                "format": "none",
                "logBase": 1,
                "show": true
              },
              {
                "$$hashKey": "object:2593",
                "format": "percent",
                "logBase": 1,
                "show": true
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "influxdb",
              "uid": "4g8-SShVz"
            },
            "description": "",
            "fieldConfig": {
              "defaults": {
                "links": []
              },
              "overrides": []
            },
            "fill": 1,
            "fillGradient": 0,
            "gridPos": {
              "h": 7,
              "w": 24,
              "x": 0,
              "y": 53
            },
            "hiddenSeries": false,
            "hideTimeOverride": false,
            "id": 60,
            "interval": "",
            "legend": {
              "avg": false,
              "current": true,
              "hideEmpty": false,
              "hideZero": false,
              "max": false,
              "min": false,
              "rightSide": false,
              "show": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "nullPointMode": "connected",
            "options": {
              "alertThreshold": true
            },
            "percentage": false,
            "pluginVersion": "9.3.2",
            "pointradius": 2,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
              {
                "$$hashKey": "object:2792",
                "alias": "Rain",
                "color": "#1F60C4",
                "fill": 1,
                "yaxis": 1
              },
              {
                "$$hashKey": "object:2793",
                "alias": "Wind",
                "color": "#FADE2A",
                "yaxis": 1
              },
              {
                "$$hashKey": "object:2794",
                "alias": "Pressure",
                "color": "#73BF69",
                "yaxis": 2
              },
              {
                "$$hashKey": "object:2795",
                "alias": "Snow",
                "color": "rgb(255, 255, 255)",
                "dashLength": 4,
                "dashes": true,
                "fill": 1,
                "spaceLength": 1
              },
              {
                "$$hashKey": "object:2796",
                "alias": "Visibility (K)",
                "color": "rgba(255, 255, 255, 0.65)",
                "dashes": true,
                "fill": 0
              }
            ],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "alias": "Snow",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "measurement": "weather",
                "orderByTime": "ASC",
                "policy": "autogen",
                "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"wind_speed\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Wind\")",
                "refId": "A",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "snow_1h"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              },
              {
                "alias": "Pressure",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "hide": false,
                "measurement": "weather",
                "orderByTime": "ASC",
                "policy": "autogen",
                "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"visibility\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 }))\n  |> set(key: \"_field\", value: \"Visibility (K)\")",
                "refId": "B",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "pressure"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              },
              {
                "alias": "Rain",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "hide": false,
                "measurement": "weather",
                "orderByTime": "ASC",
                "policy": "autogen",
                "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"rain\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Rain\")",
                "refId": "C",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "rain_1h"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              },
              {
                "alias": "Visibility (K)",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "hide": false,
                "measurement": "weather",
                "orderByTime": "ASC",
                "policy": "autogen",
                "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"pressure\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Pressure\")",
                "refId": "D",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "visibility"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    },
                    {
                      "params": [
                        " / 1000"
                      ],
                      "type": "math"
                    }
                  ]
                ],
                "tags": []
              },
              {
                "alias": "Wind",
                "datasource": {
                  "type": "influxdb",
                  "uid": "4g8-SShVz"
                },
                "groupBy": [
                  {
                    "params": [
                      "$__interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "hide": false,
                "measurement": "weather",
                "orderByTime": "ASC",
                "policy": "autogen",
                "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather\")\n  |> filter(fn: (r) => r[\"_field\"] == \"snow\")\n  |> filter(fn: (r) => r[\"forecast\"] == \"*\")\n  |> keep(columns: [\"_field\", \"_value\", \"_time\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> set(key: \"_field\", value: \"Snow\")",
                "refId": "E",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "wind_speed"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    }
                  ]
                ],
                "tags": []
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Wind, Pressure and Precipitation ",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "transparent": true,
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "$$hashKey": "object:2847",
                "decimals": 1,
                "format": "none",
                "label": "",
                "logBase": 1,
                "show": true
              },
              {
                "$$hashKey": "object:2848",
                "format": "none",
                "label": "",
                "logBase": 1,
                "show": true
              }
            ],
            "yaxis": {
              "align": false
            }
          }
        ],
        "title": "Weather",
        "type": "row"
      }
    ],
    "refresh": "5m",
    "schemaVersion": 37,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "description": "The cost to purchase electricity from the grid.",
          "hide": 2,
          "label": "Grid Cost",
          "name": "grid_cost",
          "query": "0.135",
          "skipUrlSync": false,
          "type": "constant"
        },
        {
          "allValue": "*",
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "influxdb",
            "uid": "4g8-SShVz"
          },
          "definition": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http\")\n  |> keep(columns: [\"host\"])\n  |> unique(column: \"host\")\n  |> map(fn: (r) => ({ \n    \"_value\": r.host\n  }))",
          "description": "The powerwall you want to see data graphed for.",
          "hide": 1,
          "includeAll": true,
          "label": "Powerwall",
          "multi": false,
          "name": "powerwall",
          "options": [],
          "query": "from(bucket: \"powerwall\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http\")\n  |> keep(columns: [\"host\"])\n  |> unique(column: \"host\")\n  |> map(fn: (r) => ({ \n    \"_value\": r.host\n  }))",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-24h",
      "to": "now"
    },
    "timepicker": {
      "refresh_intervals": [
        "5s",
        "10s",
        "30s",
        "1m",
        "5m",
        "15m",
        "30m",
        "1h",
        "2h",
        "1d"
      ]
    },
    "timezone": "browser",
    "title": "Powerwall Power Flow",
    "uid": "RSabAvRxyz",
    "version": 50,
    "weekStart": ""
  }